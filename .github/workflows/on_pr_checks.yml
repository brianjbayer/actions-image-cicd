name: PR

on:
  pull_request:
    branches:
      - main

jobs:

  check-git_github_info:
    uses: ./.github/workflows/git_github_info.yml

  # --- Image Name Normalizer ---

  normalize-valid-image-name:
    uses: ./.github/workflows/normalize_for_image_name.yml
    with:
      raw_name: valid-lowercase-dashes-numbers-22

  check-valid-normalize_for_image_name:
    needs: [normalize-valid-image-name]
    runs-on: ubuntu-latest
    env:
      NORM_NAME: ${{ needs.normalize-valid-image-name.outputs.name }}
    steps:
      - name: Output normalized name
        run: echo "NORM_NAME=[${NORM_NAME}]"
      - name: Verify normalized name
        run: test "$NORM_NAME" = 'valid-lowercase-dashes-numbers-22'

  normalize-invalid-image-name:
    uses: ./.github/workflows/normalize_for_image_name.yml
    with:
      raw_name: "  Dependabot/bundler//nokogiri-1.13.4  "

  check-invalid-normalize_for_image_name:
    needs: [normalize-invalid-image-name]
    runs-on: ubuntu-latest
    env:
      NORM_NAME: ${{ needs.normalize-invalid-image-name.outputs.name }}
    steps:
      - name: Output normalized name
        run: echo "NORM_NAME=[${NORM_NAME}]"
      - name: Verify normalized name
        run: test "$NORM_NAME" = 'dependabot-bundler-nokogiri-1-13-4'

  # -- PR Names ---

  pr-image-names-no-branch:
    name: Generate PR Image Names
    uses: ./.github/workflows/image_names.yml

  check-pr-image-names-no-branch:
    name: Verify PR Image Names
    runs-on: ubuntu-latest
    needs: pr-image-names-no-branch
    env:
      DEV_IMAGE: ${{ needs.pr-image-names-no-branch.outputs.dev_image }}
      UNVETTED_IMAGE: ${{ needs.pr-image-names-no-branch.outputs.unvetted_image }}
      VETTED_IMAGE: ${{ needs.pr-image-names-no-branch.outputs.vetted_image }}
    steps:
      - name: Image Names
        run: |
          echo "Dev Image Name      : ${DEV_IMAGE}"
          echo "Unvetted Image Name : ${UNVETTED_IMAGE}"
          echo "Vetted Image Name   : ${VETTED_IMAGE}"
      - name: Verify Dev Image Name
        run: test "$DEV_IMAGE" = "${{ github.repository }}_dev:${{ github.event.pull_request.head.sha }}"
      - name: Verify Unvetted Image Name
        if: ${{ success() || failure() }}
        run: test "$UNVETTED_IMAGE" = "${{ github.repository }}_unvetted:${{ github.event.pull_request.head.sha }}"
      - name: Verify Vetted Image Name
        if: ${{ success() || failure() }}
        run: test "$VETTED_IMAGE" = "${{ github.repository }}:${{ github.event.pull_request.head.sha }}"

  pr-image-names-with-branch:
    name: Generate PR (Branch) Image Names
    uses: ./.github/workflows/image_names.yml
    with:
      add_branch_name: true

  check-pr-image-names-with-branch:
    name: Verify PR (Branch) Image Names
    runs-on: ubuntu-latest
    needs: pr-image-names-with-branch
    env:
      DEV_IMAGE: ${{ needs.pr-image-names-with-branch.outputs.dev_image }}
      UNVETTED_IMAGE: ${{ needs.pr-image-names-with-branch.outputs.unvetted_image }}
      VETTED_IMAGE: ${{ needs.pr-image-names-with-branch.outputs.vetted_image }}
    steps:
      - name: Image Names
        run: |
          echo "Dev Image Name      : ${DEV_IMAGE}"
          echo "Unvetted Image Name : ${UNVETTED_IMAGE}"
          echo "Vetted Image Name   : ${VETTED_IMAGE}"
      - name: Verify Dev Image Name
        run: test "$DEV_IMAGE" = "${{ github.repository }}_${{ github.head_ref }}_dev:${{ github.event.pull_request.head.sha }}"
      - name: Verify Unvetted Image Name
        if: ${{ success() || failure() }}
        run: test "$UNVETTED_IMAGE" = "${{ github.repository }}_${{ github.head_ref }}_unvetted:${{ github.event.pull_request.head.sha }}"
      - name: Verify Vetted Image Name
        if: ${{ success() || failure() }}
        run: test "$VETTED_IMAGE" = "${{ github.repository }}_${{ github.head_ref }}:${{ github.event.pull_request.head.sha }}"

  pr-image-names-override-branch:
    name: Override PR Branch Image Names
    uses: ./.github/workflows/image_names.yml
    with:
      add_branch_name: true
      branch_name: MY-BRANCH

  check-pr-image-names-with-override-branch:
    name: Verify Override Branch Image Names
    runs-on: ubuntu-latest
    needs: pr-image-names-override-branch
    env:
      DEV_IMAGE: ${{ needs.pr-image-names-override-branch.outputs.dev_image }}
      UNVETTED_IMAGE: ${{ needs.pr-image-names-override-branch.outputs.unvetted_image }}
      VETTED_IMAGE: ${{ needs.pr-image-names-override-branch.outputs.vetted_image }}
      NORM_BRANCH: my-branch
    steps:
      - name: Image Names
        run: |
          echo "Dev Image Name      : ${DEV_IMAGE}"
          echo "Unvetted Image Name : ${UNVETTED_IMAGE}"
          echo "Vetted Image Name   : ${VETTED_IMAGE}"
      - name: Verify Dev Image Name
      # brianjbayer/actions-image-cicd_my-branch_dev:7e149a2ab17591102f05f7815a1d94ea8cc2e6d6
        run: test "$DEV_IMAGE" = "${{ github.repository }}_${NORM_BRANCH}_dev:${{ github.event.pull_request.head.sha }}"
      - name: Verify Unvetted Image Name
        if: ${{ success() || failure() }}
        run: test "$UNVETTED_IMAGE" = "${{ github.repository }}_${NORM_BRANCH}_unvetted:${{ github.event.pull_request.head.sha }}"
      - name: Verify Vetted Image Name
        if: ${{ success() || failure() }}
        run: test "$VETTED_IMAGE" = "${{ github.repository }}_${NORM_BRANCH}:${{ github.event.pull_request.head.sha }}"


  # --- Build/Push Multi-platform Image ---

  buildx_push_image:
    name: Build (Multi-platform) Image
    needs: pr-image-names-with-branch
    uses: ./.github/workflows/buildx_push_image.yml
    with:
      # image: ${{ github.repository }}_${{ needs.pr-norm-branch.outputs.name }}_test:${{ github.event.pull_request.head.sha }}
      image: ${{ needs.pr-image-names-with-branch.outputs.unvetted_image }}
      platforms: "linux/amd64,linux/arm64"
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # --- Promote Multi-platform Image ---

  copyx_image:
    name: Promote (Copy) Multi-platform) Image
    needs:
      - pr-image-names-with-branch
      - buildx_push_image
    uses: ./.github/workflows/copy_image.yml
    with:
      source_image: ${{ needs.pr-image-names-with-branch.outputs.unvetted_image }}
      target_image: ${{ needs.pr-image-names-with-branch.outputs.vetted_image }}
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  copyx_image_to_latest:
    name: Promote (Copy) Latest Multi-platform) Image
    needs:
      - pr-image-names-with-branch
      - copyx_image
    uses: ./.github/workflows/copy_image_to_latest.yml
    with:
      image: ${{ needs.pr-image-names-with-branch.outputs.vetted_image }}
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
