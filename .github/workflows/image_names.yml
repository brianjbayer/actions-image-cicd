name: Development and Deploy Image Names

on:
  workflow_call:

    inputs:
      runner:
        description: "The type of runner for this workflow (Default: ubuntu-latest)"
        required: false
        type: string
        default: ubuntu-latest
      image_base_name:
        description: "The name of the image including its registry and repository (Default: github.repository)"
        required: false
        type: string
        default: ${{ github.repository }}
      add_branch_name:
        description: Append branch name to image names
        required: false
        type: boolean
        default: false
      branch_name:
        description: Non-normalized branch name to use if add_branch_name is true
        required: false
        type: string
        default: ${{ github.head_ref }}
      tag:
        description: "Tag for image names (Default: github.event.pull_request.head.sha)"
        required: false
        type: string
        default: ${{ github.event.pull_request.head.sha }}
    outputs:
      dev_image:
        description: The name of the development environment image
        value: ${{ jobs.generate-pr-image-names.outputs.dev_name }}
      dev_repository:
        description: The name of the development environment repository
        value: ${{ jobs.generate-pr-image-names.outputs.dev_repository }}
      unvetted_image:
        description: The name of the unvetted deployment image
        value: ${{ jobs.generate-pr-image-names.outputs.unvetted_name }}
      unvetted_repository:
        description: The name of the unvetted deployment repository
        value: ${{ jobs.generate-pr-image-names.outputs.unvetted_repository }}
      vetted_image:
        description: The name of the Vetted deployment image
        value: ${{ jobs.generate-pr-image-names.outputs.vetted_name }}
      vetted_repository:
        description: The name of the Vetted deployment repository
        value: ${{ jobs.generate-pr-image-names.outputs.vetted_repository }}

jobs:
  pr-norm-branch:
    name: Normalize Branch for Image Name
    uses: ./.github/workflows/normalize_for_image_name.yml
    with:
      raw_name: ${{ inputs.branch_name }}
      runner: ${{ inputs.runner }}

  generate-pr-image-names:
    name: Generate Image Names
    runs-on: ${{ inputs.runner }}
    needs: [pr-norm-branch]
    env:
      BRANCH_SUFFIX: ${{ inputs.add_branch_name && format('_{0}', needs.pr-norm-branch.outputs.name) || '' }}
    outputs:
      dev_name: ${{ steps.generate.outputs.dev_name }}
      dev_repository: ${{ steps.generate.outputs.dev_repository }}
      unvetted_name: ${{ steps.generate.outputs.unvetted_name }}
      unvetted_repository: ${{ steps.generate.outputs.unvetted_repository }}
      vetted_name: ${{ steps.generate.outputs.vetted_name }}
      vetted_repository: ${{ steps.generate.outputs.vetted_repository }}

    steps:
      - id: Generate
        env:
          DEV_REPOSITORY: ${{ inputs.image_base_name }}${{ env.BRANCH_SUFFIX }}-dev
          UNVETTED_REPOSITORY: ${{ inputs.image_base_name }}${{ env.BRANCH_SUFFIX }}-unvetted
          VETTED_REPOSITORY: ${{ inputs.image_base_name }}${{ env.BRANCH_SUFFIX }}
        run: |
          echo "dev_repository=${DEV_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "dev_name=${DEV_REPOSITORY}:${{inputs.tag}}" >> $GITHUB_OUTPUT

          echo "unvetted_repository=${UNVETTED_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "unvetted_name=${UNVETTED_REPOSITORY}:${{inputs.tag}}" >> $GITHUB_OUTPUT

          echo "vetted_repository=${VETTED_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "vetted_name=${VETTED_REPOSITORY}:${{inputs.tag}}" >> $GITHUB_OUTPUT

      - name: Show generated names
        run: |
          echo "dev_name            [${{ steps.generate.outputs.dev_name }}]"
          echo "dev_repository      [${{ steps.generate.outputs.dev_repository }}]"
          echo "unvetted_name       [${{ steps.generate.outputs.unvetted_name }}]"
          echo "unvetted_repository [${{ steps.generate.outputs.unvetted_repository }}]"
          echo "vetted_name         [${{ steps.generate.outputs.vetted_name }}]"
          echo "vetted_repository   [${{ steps.generate.outputs.vetted_repository }}]"
